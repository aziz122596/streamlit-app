import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω —Ü–≤–µ—Ç–∞ —Ö–∞–∫–∏ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É
st.markdown(
    """
    <style>
    .stApp {
        background-color: #2F4F4F;
    }
    h1, h2, h3, h4, h5, h6, p, div, label {
        text-align: center;
    }
    </style>
    """,
    unsafe_allow_html=True
)

def login():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ ¬´–í—Ö–æ–¥¬ª
    st.markdown("<h2>–í—Ö–æ–¥</h2>", unsafe_allow_html=True)

    # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ –∫–æ–ª–æ–Ω–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª–µ –≤–≤–æ–¥–∞ –±—ã–ª–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    if 'login_button_clicked' not in st.session_state:
        st.session_state['login_button_clicked'] = False

    if st.button("–í–æ–π—Ç–∏"):
        if username == 'admin':
            st.session_state['logged_in'] = True
            st.session_state['username'] = username
            st.success(f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –∫–∞–∫ {username}")
            st.session_state['login_button_clicked'] = True
        else:
            st.error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

def main_app():
    st.title("üå± –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–≤–æ–π—Å—Ç–≤ –ø–æ—á–≤—ã —Å –±–∏–æ—É–≥–ª–µ–º")
    st.write(f"**–í—ã –≤–æ—à–ª–∏ –∫–∞–∫** {st.session_state['username']}")
    st.write("–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –ø–æ—á–≤—ã –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –±–∏–æ—É–≥–ª—è")

    st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á—ë—Ç–∞")
    dose_input = st.sidebar.number_input(
        "–í–≤–µ–¥–∏—Ç–µ –¥–æ–∑—É –≤–Ω–µ—Å–µ–Ω–∏—è –±–∏–æ—É–≥–ª—è (—Ç/–≥–∞)",
        min_value=0.0,
        value=1.0,
        step=0.5
    )

    # –î–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤
    biochar_data = {
        '–î–µ—Ä–Ω–æ–≤–æ-–ø–æ–¥–∑–æ–ª–∏—Å—Ç–∞—è –ø–æ—á–≤–∞': {
            '–°–∫–æ—Ä–ª—É–ø–∞ –∫–µ–¥—Ä–æ–≤–æ–≥–æ –æ—Ä–µ—Ö–∞': {
                600: {
                    '–¢–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å, Œª –í—Ç/(–º‚àô–ö)': {
                        'a': 6.4030501558E-10, 
                        'b': -3.9017669371E-07, 
                        'c': -0.0002202355, 
                        'd': 0
                    },
                    '–£–¥–µ–ª—å–Ω–æ–µ —Ç–µ–ø–ª–æ–≤–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ, R (–ö‚àô–º)/–í—Ç': {
                        'a': 5.5336168852E-07, 
                        'b': -3.7725112350E-04, 
                        'c': 0.0222171741, 
                        'd': 0
                    },
                    '–û–±—ä–µ–º–Ω–∞—è —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç—å, Cv –ú–î–∂/(–º¬≥‚àô–ö)': {
                        'a': -1.2456373835E-07, 
                        'b': 8.1649215602E-05, 
                        'c': -0.0032040359, 
                        'd': 0
                    },
                    '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å, –∞ –º–º¬≤/—Å': {
                        'a': -1.4161903760E-08, 
                        'b': 8.8998094542E-06, 
                        'c': -0.0002875819, 
                        'd': 0
                    },
                },
            },
            '–ü–æ–º–µ—Ç': {
                400: {
                    '–¢–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å, Œª –í—Ç/(–º‚àô–ö)': {
                        'a': -1.2003705484E-07, 
                        'b': 8.0134814372E-05, 
                        'c': -0.0036293444, 
                        'd': 0
                    },
                    '–£–¥–µ–ª—å–Ω–æ–µ —Ç–µ–ø–ª–æ–≤–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ, R (–ö‚àô–º)/–í—Ç': {
                        'a': -7.1261584317E-07, 
                        'b': 3.9517129660E-04, 
                        'c': 0.0261195476, 
                        'd': 0
                    },
                    '–û–±—ä–µ–º–Ω–∞—è —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç—å, Cv –ú–î–∂/(–º¬≥‚àô–ö)': {
                        'a': 2.1126725917E-07, 
                        'b': -1.4845068697E-04, 
                        'c': 0.0095133799, 
                        'd': 0
                    },
                    '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å, –∞ –º–º¬≤/—Å': {
                        'a': -3.5776620248E-09, 
                        'b': 2.3431064427E-06, 
                        'c': -0.0000685733, 
                        'd': 0
                    },
                },
            },
        },
    }

    soil_type = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ—á–≤—ã", list(biochar_data.keys()))
    biochar_type = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–∏–æ—É–≥–ª—è", list(biochar_data[soil_type].keys()))
    temperature = st.sidebar.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ–ª—É—á–µ–Ω–∏—è –±–∏–æ—É–≥–ª—è",
        list(biochar_data[soil_type][biochar_type].keys())
    )

    properties = biochar_data[soil_type][biochar_type][temperature]

    st.markdown("---")
    st.subheader(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–∏ –¥–æ–∑–µ –≤–Ω–µ—Å–µ–Ω–∏—è {dose_input} —Ç/–≥–∞")

    # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Å–≤–æ–π—Å—Ç–≤
    tabs = st.tabs(list(properties.keys()))
    for idx, (prop_name, coefs) in enumerate(properties.items()):
        with tabs[idx]:
            delta = calculate_soil_property_change(coefs, dose_input)
            st.metric(label=prop_name, value=f"{delta:.6f}")
            st.markdown("### –ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è")

            x_values = np.linspace(0, 100, 100)
            y_values = [calculate_soil_property_change(coefs, x) for x in x_values]
            fig, ax = plt.subplots()
            ax.plot(x_values, y_values, label=prop_name, color='green')
            ax.set_xlabel('–î–æ–∑–∞ –±–∏–æ—É–≥–ª—è (—Ç/–≥–∞)')
            ax.set_ylabel('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞')
            ax.set_title(prop_name)
            ax.legend()
            st.pyplot(fig)

    # –í—ã—Ö–æ–¥
    st.sidebar.markdown("---")
    if st.sidebar.button("üö™ –í—ã–π—Ç–∏"):
        st.session_state['logged_in'] = False
        st.session_state['username'] = ''

def calculate_soil_property_change(coefs, x):
    a = coefs['a']
    b = coefs['b']
    c = coefs['c']
    d = coefs['d']
    return a * x**3 + b * x**2 + c * x + d

def main():
    if 'logged_in' not in st.session_state:
        st.session_state['logged_in'] = False
        st.session_state['username'] = ''

    if st.session_state['logged_in']:
        main_app()
    else:
        login()

if __name__ == "__main__":
    main()
